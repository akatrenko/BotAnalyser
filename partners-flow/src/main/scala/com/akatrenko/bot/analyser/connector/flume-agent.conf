### ==================== Команда запуска в консоли ==================== ###
#flume-ng agent --name stop-bot-agent --conf connector --conf-file connector/flume-agent.conf -Dflume.root.logger=DEBUG,console

### ==================== Компоненты узла <agent> ==================== ###

stop-bot-agent.sources = stop-bot-source
stop-bot-agent.channels = stop-bot-channel
stop-bot-agent.sinks = stop-bot-sink

### ==================== Источник my_source ================== ###
# Тип источника - netcat (источники из стандартной поставки Flume имеют зарезервированные имена-псевдонимы)
//stop-bot-agent.sources.stop-bot-source.type = netcat
//# Указываем, куда биндить наш исчтоник
//stop-bot-agent.sources.stop-bot-source.bind = localhost
//stop-bot-agent.sources.stop-bot-source.port = 11111
//# Указываем источнику канал (или список каналов, через пробел), куда отправлять полученные события
//stop-bot-agent.sources.stop-bot-source.channels = stop-bot-channel

stop-bot-agent.sources.stop-bot-source.type = exec
stop-bot-agent.sources.stop-bot-source.command = more /Users/akatrenko/Documents/GridU_projects/SparkStreaming/bot-analyser/partners-flow/src/main/scala/com/akatrenko/bot/analyser/generator/partners-data.txt
stop-bot-agent.sources.stop-bot-source.logStdErr = true
stop-bot-agent.sources.stop-bot-source.channels = stop-bot-channel

### ==================== Канал my_channel ================== ###
# Используем тип канала из пакета Flume - memory, который хранит события в памяти
stop-bot-agent.channels.stop-bot-channel.type = memory
# Вместимость канала, кол_во событий
stop-bot-agent.channels.stop-bot-channel.capacity = 10000
# Число событий в одной транзакции
stop-bot-agent.channels.stop-bot-channel.transactionCapacity = 1000

### ==================== Сток my_sink ================== ###
# Тип стока - Kafka, пишет события в указанный топик Kafka
stop-bot-agent.sinks.stop-bot-sink.type = org.apache.flume.sink.kafka.KafkaSink
stop-bot-agent.sinks.stop-bot-sink.zookeeperConnect = localhost:2181
stop-bot-agent.sinks.stop-bot-sink.brokerList = localhost:9093
# параметр acks=1 указывает, что producer будет ожидать от leader доставки и записи сообщения, без репликации
stop-bot-agent.sinks.stop-bot-sink.requiredAcks = 1
stop-bot-agent.sinks.stop-bot-sink.batchSize = 500
stop-bot-agent.sinks.stop-bot-sink.topic = partner-message
# Из какого канала будем забирать события
stop-bot-agent.sinks.stop-bot-sink.channel = stop-bot-channel